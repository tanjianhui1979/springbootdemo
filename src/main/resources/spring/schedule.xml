<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"
	default-lazy-init="false">
    <bean name="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="configLocation" value="classpath:quartz/quartz.properties"/>
        <property name="globalTriggerListeners">
        	<list>
        	</list>
        </property>
        <property name="globalJobListeners">
	      	<list>
			</list>
        </property>
        <property name="triggers">
        	<list>
        		<!--<ref local="jobDetailManagerTrigger"/>-->
				<ref local="scheduleManagerTrigger" />
        	</list>
        </property>
        <property name="waitForJobsToCompleteOnShutdown" value="true"></property>
        <property name="startupDelay" value="30"></property>
        <property name="overwriteExistingJobs" value="false"></property>
    </bean>

	<bean id="scheduleManagerJobDetail" class="com.springbootdemo.sdk.schedule.BeanInvokingJobDetailFactoryBean">
		<property name="concurrent" value="false" />
		<property name="targetBean" value="scheduleManagerTask" />
		<property name="targetMethod" value="execute" />
	</bean>
	<bean id="scheduleManagerTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="cronExpression" value="0 * * * * ?" />
		<property name="jobDetail" ref="scheduleManagerJobDetail"></property>
	</bean>

	<bean id="sampleTaskJobDetail" class="com.springbootdemo.sdk.schedule.BeanInvokingJobDetailFactoryBean">
		<property name="concurrent" value="false" />
		<property name="targetBean" value="sampleTask" />
		<property name="targetMethod" value="execute" />
		<property name="durable" value="true" />
	</bean>
    
    <!-- 以下Job Service分别用来增加Job，暂停Job，重启Job -->
    <!--<bean id="addJobService" class="com.i2f.i2shopping.scheduling.service.impl.AddJobServiceImpl">
	</bean>
	 <bean id="pauseJobService" class="com.i2f.i2shopping.scheduling.service.impl.PauseJobServiceImpl">
	</bean>
	 <bean id="resumeJobService" class="com.i2f.i2shopping.scheduling.service.impl.ResumeJobServiceImpl">
	</bean>-->
    <!-- 以上Job Service分别用来增加Job，暂停Job，重启Job -->
    
	<!-- Job Detail Manager用来定期扫描SCHEDULE_TASK表，从该表中获取尚未调度的任务 -->
	<!--<bean id="jobDetailManagerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="cronExpression" value="15 * * * * ?" />
		<property name="jobDetail" ref="jobDetailManagerJobDetail"></property>
	</bean>
	<bean id="jobDetailManagerJobDetail" class="com.i2f.i2shopping.scheduling.BeanInvokingJobDetailFactoryBean">
			<property name="concurrent" value="false" />
			<property name="targetBean" value="jobDetailManager" />
			<property name="targetMethod" value="manageJobDetail" />
	</bean>
	<bean id="jobDetailManager" class="com.i2f.i2shopping.scheduling.service.impl.JobDetailManager" />-->
	<!-- Job Detail Manager用来定期扫描B2C_TASK表，从该表中获取尚未调度的任务 -->

	<!--<bean id="orderScanServiceJobDetail" class="com.i2f.i2shopping.scheduling.BeanInvokingJobDetailFactoryBean">
			<property name="concurrent" value="false" />
			<property name="targetBean" value="orderScanService" />
			<property name="targetMethod" value="scanOrder" />
	</bean>-->
</beans>